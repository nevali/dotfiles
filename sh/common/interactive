## In interactive shells, use certain apps if they can be found

init_interactive()
{
	local p i
	
	[ $is_interactive -eq 1 ] || return 0
	
	#for i in $pager_list ; do
	#	p=$(pathto $i) || continue
	#	PAGER="$p"
	#	break
	#done
	
	if [ $is_local -eq 1 ] ; then
		# These only make sense locally
		if test $shell_name = sh ; then
			set -E
		fi
	fi
	
#	if test -x "$d/kaleidoscope-git" ; then
#	   GIT_EXTERNAL_DIFF="$d/kaleidoscope-git"
#	   export GIT_EXTERNAL_DIFF
#	fi
#	if test -x "$d/ksdiff" ; then
#		SVN_EXTERNAL_DIFF="$d/ksdiff"
#		export SVN_EXTERNAL_DIFF
#	fi
#	if test -x "$d/mate" ; then
#		def_visual="$d/mate -w"
#		export VISUAL
#	fi

	if test x"$shell_name" = x"bash" ; then
		. "${PROFILEDIR}/../bash/iterm2_shell_integration.bash"
		if type -t iterm2_preexec_invoke_cmd 2>/dev/null >&2 ; then
			ITERM_PREEXEC_INTERACTIVE_MODE="yes"
			iterm2_preexec_invoke_cmd
		fi
	fi
	if test x"$shell_name" = x"zsh" ; then
		. "${PROFILEDIR}/../zsh/iterm2_shell_integration.zsh"
		if whence -v iterm2_preexec_invoke_cmd 2>/dev/null >&2 ; then
			ITERM_PREEXEC_INTERACTIVE_MODE="yes"
			iterm2_preexec_invoke_cmd
		fi
	fi
	
	if test $update_ps1 -eq 1 ; then
		PS1="$profile_ps1"
	fi
	
	if test $update_ps2 -eq 1 ; then
		PS2="$profile_ps2"
	fi
	
	if test $update_promptcmd -eq 1 ; then
		PROMPT_COMMAND="profile_precmd"

		precmd() {
			profile_precmd
		}

		if test x"$shell_name" = x"bash" ; then
			if type -t iterm2_preexec_invoke_cmd 2>/dev/null >&2 ; then
				PROMPT_COMMAND="profile_precmd ; iterm2_preexec_invoke_cmd"
			fi
		fi
	fi

}
