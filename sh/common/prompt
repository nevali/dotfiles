## Set the shell prompt for interactive sessions

_profile_curdir=''
_profile_branch=''
_profile_ts=''

init_prompt()
{
	local nps npe prompt_user prompt_host prompt_path prompt_ind prompt_ps2
	local pbit_preamble pbit_postamble pbit_user pbit_vcs pbit_path
	
	prompt_tty="$TTYNAME"

	if test $shell_name = zsh ; then
		setopt promptsubst
		nps='%{'
		npe='%}'
		prompt_user='%n'
		prompt_host='%m'
		prompt_path=' ${_profile_curdir}'
		prompt_ind='%#'
		prompt_ps2='%_>'
	elif test $shell_name = bash ; then
		nps='\['
		npe='\]'
		prompt_user='\u'
		prompt_host='\h'
		prompt_path=' \W'
		prompt_ind='\$'
		prompt_ps2='>'
	else
		nps=`printf "\001"`
		npe=`printf "\002"`
		prompt_user="$LOGNAME"
		prompt_host="$NODENAME"
		prompt_path=''
		prompt_ind='$'
		prompt_ps2='>'
	fi
	
	pbit_preamble="${nps}${ansi_reset}${ansi_bnormal}${npe}[${nps}${ansi_normal}${npe}\${_profile_ts} "
	pbit_postamble="${nps}${ansi_bnormal}${npe}]${nps}${ansi_bred}${npe}${prompt_ind} ${nps}${ansi_reset}${npe}"
	if test $is_local -eq 1 ; then
		pbit_user="${nps}${ansi_bgreen}${npe}${prompt_user}:${prompt_tty}"
	else
		pbit_user="${nps}${ansi_bcyan}${npe}${prompt_user}${nps}${ansi_green}${npe}@${nps}${ansi_bcyan}${npe}${prompt_host}:${prompt_tty}"
	fi

	pbit_vcs="${nps}${ansi_bcyan}${npe}\${_profile_branch}"
	pbit_path="${nps}${ansi_reset}${ansi_bmagenta}${npe}${prompt_path}"

	PS1="${pbit_preamble}${pbit_user}${pbit_path}${pbit_vcs}${pbit_postamble}"
	PS2="${nps}${ansi_reset}${ansi_bred}${npe}${prompt_ps2}${nps}${ansi_reset}${npe} "
	def_prompt_command="profile_precmd"
}

## Update shell variables used when evaluating $PS1 (including updating the
## window title and, on Mac OS X, current working directory)
profile_precmd()
{
	profile_vcbranch
	profile_timestamp
	profile_cwd
	profile_title

	if type -t update_terminal_cwd 2>/dev/null >&2 ; then
		update_terminal_cwd
	fi
	if type -t shell_session_history_check 2>/dev/null >&2 ; then
		shell_session_history_check
	fi
}

## Determine _profile_curdir
profile_cwd()
{
	local here
	
	here=`pwd`
	if test x"$here" = x"$HOME" ; then
		_profile_curdir='~'
	else
		if test $shell_name = zsh ; then
			_profile_curdir=`basename "$here" | sed 's@%@%%@g'`
		else
			_profile_curdir=`basename "$here"`
		fi
	fi
}

## Determine the current timestamp (profile_timestamp)
profile_timestamp()
{
	_profile_ts=`date +%H%M%S`
}

## Set the window title
profile_title()
{
	local suf
	
	if test x"$TERM" = x"xterm" || test x"$TERM" = x"xterm-color" || test x"$TERM" = x"xterm-256color" ; then
		suf='$'
		test x"$UID" = x"0" && suf='#'
		if test x"$TERM_PROGRAM" = x"Apple_Terminal" ; then
			printf "\033]2;[%s@%s%s]%s\007" "$LOGNAME" "$NODENAME" "$_profile_branch" "$suf"
		else
			printf "\033]2;[%s@%s%s %s]%s\007" "$LOGNAME" "$NODENAME" "$_profile_branch" "$_profile_curdir" "$suf"
			printf "\033]1;%s@%s\007" "$LOGNAME" "$NODENAME"
		fi
	fi
#	if test x"$TERM" = x"tmux" || test x"$TERM" = x"screen" || test x"$TERM" = x"xterm-256color" ; then
#		printf "\033k[%s@%s%s %s]%s\033\\" "$LOGNAME" "$NODENAME" "$df__branch" "$curdir" "$suf"
#	fi
}


## Determine what VCS branch, if any, the CWD is on
profile_vcbranch()
{
	local gitbranch
	
	gitbranch=`( git symbolic-ref HEAD | sed -e 's!^refs/heads/!!' ) 2>/dev/null`
	if test x"$gitbranch" = x"" ; then
		_profile_branch=''
	else
		_profile_branch=":$gitbranch"
	fi
}
