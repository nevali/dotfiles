## Determine the name of the shell
shell_name="sh"
test x"$BASH_VERSION" = x"" || shell_name="bash"
test x"$ZSH_NAME" = x"" || shell_name="zsh"

## Determine shell execution environment type
is_interactive=0
is_login=0
case "$shell_name" in
	bash)
		shopt -q login_shell && is_login=1
		set -o posix
		[[ $- == *i* ]] && is_interactive=1
		;;
	zsh)
		[[ $- == *i* ]] && is_interactive=1
		[[ -o interactive ]] && is_interactive=1
		[[ -o login ]] && is_login=1
		;;
	*)
		[ -t 0 ] && is_interactive=1
		;;
esac

if test "$(id -u 2>/dev/null)" = "0" ; then
	is_root=1
fi

## Determine whether this is a remote or a local session
if test x"$shell_location" = x"remote" ; then
	is_local=0
elif test x"$shell_location" = x"local" ; then
	is_local=1
elif test -z "$SSH_CLIENT" && test -z"$SSH_CONNECTION" ; then
	is_local=1
	shell_location="local"
else
	is_local=0
	shell_location="remote"
fi
export shell_location

## On interactive shells, determine whether we should set the
## prompt or not based upon whether the contents of PS1/PS2/PROMPT_COMMAND
## contain default values

update_ps1=0
update_ps2=0
update_promptcmd=0

if [ $is_interactive -eq 1 ] ; then
	if test x"$PS1" = x'# ' || \
		test x"$PS1" = x'$ ' || \
		test x"$PS1" = x'\$ ' || \
		test x"$PS1" = x'\s-\v\$ ' || \
		test x"$PS1" = x'\u@\h:\w\$ ' || \
		test x"$PS1" = x'\h:\W \u\$ ' || \
		test x"$PS1" = x'${debian_chroot:+($debian_chroot)}\u@\h:\w\$ ' || \
		test x"$PS1" = x'%m%# ' ; then
		update_ps1=1
	fi
	if test x"$PS2" = x'> ' || test x"$PS2" = x'%_> ' ; then
		update_ps2=1
	fi
	if test x"$PROMPT_COMMAND" = x"" || \
		test x"$PROMPT_COMMAND" = x"update_terminal_cwd; " || \
		test x"$PROMPT_COMMAND" = x"update_terminal_cwd" || \
		test x"$PROMPT_COMMAND" = x"shell_session_history_check; update_terminal_cwd" || \
		test x"$PROMPT_COMMAND" = x"update_terminal_cwd; shell_session_history_check; update_terminal_cwd"; then
		update_promptcmd=1
	fi
fi

test x"$HOSTNAME" = x"" && HOSTNAME=$(hostname)
test x"$NODENAME" = x"" && NODENAME=$(echo ${HOSTNAME} |cut -f1 -d.)
test x"$TTYNAME" = x"" && TTYNAME=$(tty | sed 's@^/dev/@@')
test x"$LOGNAME" = x"" && LOGNAME=$(whoami)
test x"$SYSTYPE" = x"" && SYSTYPE=$(uname -s)

## Detect Mac OS X
is_macosx=0
[ x"$Apple_Ubiquity_Message" = x"" ] || is_macosx=1
[ x"$TERM_PROGRAM" = x"Apple_Terminal" ] && is_macosx=1
[ x"$TERM_PROGRAM" = x"iTerm.app" ] && is_macosx=1

if test x"$SYSTYPE" = x"Darwin" && test -r /System/Library/CoreServices/SystemVersion.plist 2>/dev/null ; then
	is_macosx=1
fi

