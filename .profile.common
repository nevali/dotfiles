# -*- sh -*-

shell_name="sh"
test x"$ZSH_VERSION" = x"" || shell_name="zsh"
test x"$BASH_VERSION" = x"" || shell_name="bash"

nps=`printf "\001"`
npe=`printf "\002"`
esc=`printf "\033"`
test "$shell_name" = "bash" && esc='\e'
ansi_reset="${esc}[0m"
ansi_bold="${esc}[1m"
ansi_black="${esc}[0m${esc}[30m"
ansi_red="${esc}[0m${esc}[31m"
ansi_green="${esc}[0m${esc}[32m"
ansi_yellow="${esc}[0m${esc}[33m"
ansi_blue="${esc}[0m${esc}[34m"
ansi_magenta="${esc}[0m${esc}[35m"
ansi_cyan="${esc}[0m${esc}[36m"
ansi_normal="${ansi_reset}"
ansi_bnormal="${ansi_reset}${ansi_bold}"

case "$TERM" in
    sun-color)
        ansi_white="${ansi_normal}"
        ansi_bblack="${ansi_black}${ansi_bold}"
        ansi_bred="${ansi_red}${ansi_bold}"
        ansi_bgreen="${ansi_green}${ansi_bold}"
        ansi_byellow="${ansi_yellow}${ansi_bold}"
        ansi_bblue="${ansi_blue}${ansi_bold}"
        ansi_bmagenta="${ansi_magenta}${ansi_bold}"
        ansi_bcyan="${ansi_cyan}${ansi_bold}"
        ansi_bwhite="${ansi_white}${ansi_bold}"
        ;;
    *)
        ansi_white="${esc}[37m"
        ansi_bblack="${esc}[90m"
        ansi_bred="${esc}[91m"
        ansi_bgreen="${esc}[92m"
        ansi_byellow="${esc}[93m"
        ansi_bblue="${esc}[94m"
        ansi_bmagenta="${esc}[95m"
        ansi_bcyan="${esc}[96m"
        ansi_bwhite="${esc}[97m"
        ;;
esac

if test $shell_name = zsh ; then
	setopt promptsubst
	nps='%{'
	npe='%}'
	prompt_user='%n'
	prompt_host='%m'
	prompt_path=' ${curdir}'
	prompt_ind='%#'
	prompt_ps2='%_>'
elif test $shell_name = bash ; then
	nps='\['
	npe='\]'
	prompt_user='\u'
	prompt_host='\h'
	prompt_path=' \W'
	prompt_ind='\$'
	prompt_ps2='>'
else
	prompt_user="$LOGNAME"
	prompt_host=`hostname | cut -f1 -d.`
	prompt_path=''
	prompt_ind='$'
	prompt_ps2='>'
fi

pbit_preamble="${nps}${ansi_reset}${ansi_bnormal}${npe}[${nps}${ansi_normal}${npe}\${df__time} "
pbit_postamble="${nps}${ansi_bnormal}${npe}]${nps}${ansi_bred}${npe}${prompt_ind} ${nps}${ansi_normal}${npe}"

if test -z "$SSH_CLIENT" && test -z"$SSH_CONNECTION" ; then
	pbit_user="${nps}${ansi_bgreen}${npe}${prompt_user}"
	SHELL_LOCATION="local"
else
	pbit_user="${nps}${ansi_bcyan}${npe}${prompt_user}${nps}${ansi_green}${npe}@${nps}${ansi_bcyan}${npe}${prompt_host}"
	SHELL_LOCATION="remote"
fi
export SHELL_LOCATION

pbit_vcs="${nps}${ansi_bblue}${npe}\${df__branch}${nps}${ansi_cyan}${ansi_bold}${npe}"
pbit_path="${nps}${ansi_reset}${ansi_bmagenta}${npe}${prompt_path}"

def_ps1="${pbit_preamble}${pbit_user}${pbit_vcs}${pbit_path}${pbit_postamble}"
def_ps2="${nps}${ansi_reset}${ansi_bred}${npe}${prompt_ps2}${nps}${ansi_normal}${npe} "
def_prompt_command="precmd"

precmd()
{
	df__vcbranch
	HOSTNAME=`hostname`
	here=`pwd`
	if test x"$here" = x"$HOME" ; then
		curdir='~'
	else
		curdir=`basename "$here"`
	fi
	if test x"$TERM" = x"xterm" || test x"$TERM" = x"xterm-color" || test x"$TERM" = x"xterm-256color" ; then
		test x"$NODENAME" = x"" && NODENAME=`echo $HOSTNAME|cut -f1 -d.`
		suf='$'
		test x"$UID" = x"0" && suf='#'
		if test x"$TERM_PROGRAM" = x"Apple_Terminal" ; then
			printf "\033]2;[%s@%s%s]%s\007" "$LOGNAME" "$NODENAME" "$df__branch" "$suf"
		else
			printf "\033]2;[%s@%s%s %s]%s\007" "$LOGNAME" "$NODENAME" "$df__branch" "$curdir" "$suf"
			printf "\033]1;%s@%s\007" "$LOGNAME" "$NODENAME"
		fi
	fi
	if test x"$TERM_PROGRAM" = x"Apple_Terminal" ; then
		local SEARCH=' '
		local REPLACE='%20'
		PWD_URL="file://$HOSTNAME${PWD//$SEARCH/$REPLACE}"
		printf "\e]7;%s\a" "$PWD_URL/"
	fi
	df__time=`date +%H%M%S`
}

df__vcbranch()
{
    branch=`( git symbolic-ref HEAD | sed -e 's!^refs/heads/!!' ) 2>/dev/null`
	if test x"$branch" = x"" ; then
	   df__branch=''
	else
	   df__branch=" git:$branch"
    fi
}

if type -p emacs 2>&1 >/dev/null ; then
    def_visual="emacs"
elif type -p jed 2>&1 >/dev/null ; then
    def_visual="jed"
elif type -p nano 2>&1 >/dev/null ; then
    def_visual="nano"
fi

df__addpath()
{
	if test -d "$1" ; then
	    case "$PATH" in
	        "*:$1:*|*:$1|$1:*")
				return
				;;
		    *)
				PATH="$1:$PATH"
				;;
		esac
	fi
}

df__addpath /usr/local/bin
df__addpath /usr/local/git/bin
df__addpath /usr/local/mysql/bin
df__addpath /opt/local/bin
df__addpath /opt/xapian/bin
df__addpath /opt/txsuite/bin
df__addpath /opt/csw/bin
df__addpath /usr/gnu/bin
df__addpath /opt/ports/bin
df__addpath "$HOME/Tools"
export PATH

## If 'ls' is GNU ls, then enable colourisation via 'ls --color=auto'
## Otherwise, the alias (if any) is OS-dependent

is_gnu_ls=0
if ls --version 2>/dev/null >/dev/null ; then
	is_gnu_ls=1
fi

if test -x "$HOME/.dircolors" ; then
	eval `"$HOME/.dircolors"`
elif test $is_gnu_ls -eq 1 ; then
	eval `dircolors -b`
fi
CLICOLOR=1
export CLICOLOR
export LSCOLORS
export LS_COLORS

if test $is_gnu_ls -eq 1 ; then
	alias ls='ls --color=auto'
fi


## Detect Mac OS X
is_macosx=0
if test x"$Apple_Ubiquity_Message" = x"" ; then
	true
else
	is_macosx=1
fi
if test x"$TERM_PROGRAM" = x"Apple_Terminal" || test x"$TERM_PROGRAM" = x"iTerm.app" ; then
	is_macosx=1
fi

## On Mac OS X, if Kaleidoscope is installed, use it for 'git diff'
if test $is_macosx -eq 1 ; then
	for d in /usr/local/bin /opt/local/bin "$HOME/bin" "$HOME/Tools" /Volumes/iDisk/Tools ; do
		if test -x $d/kaleidoscope-git ; then
		   GIT_EXTERNAL_DIFF="$d/kaleidoscope-git"
		   export GIT_EXTERNAL_DIFF
		fi
    done
fi

